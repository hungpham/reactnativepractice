// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SignIn /> renders correctly 1`] = `
<Image
  source={1}
  style={
    Object {
      "flex": 1,
      "height": null,
      "width": null,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0.5,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "borderRadius": 45,
            "height": 90,
            "justifyContent": "center",
            "width": 90,
          },
          Object {
            "borderRadius": 60,
            "height": 120,
            "width": 120,
          },
        ]
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 40,
            "width": 40,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 0.25,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#CCC",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "center",
          "paddingLeft": undefined,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 20,
            "padding": 10,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "height": 20,
              "resizeMode": "contain",
              "width": 20,
            }
          }
        />
      </View>
      <TextInput
        autoCapitalize="none"
        imageIcon={1}
        keyboardType="email-address"
        onChangeText={[Function]}
        placeholder="UserName"
        placeholderTextColor="#d7d7d7"
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "color": "white",
            "flex": 1,
            "paddingHorizontal": 10,
          }
        }
        underlineColorAndroid="rgba(0, 0, 0, 0)"
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomColor": "#CCC",
          "borderBottomWidth": 0.5,
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "center",
          "paddingLeft": undefined,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 20,
            "padding": 10,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "height": 20,
              "resizeMode": "contain",
              "width": 20,
            }
          }
        />
      </View>
      <TextInput
        autoCapitalize="none"
        imageIcon={1}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="#d7d7d7"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "color": "white",
            "flex": 1,
            "paddingHorizontal": 10,
          }
        }
        underlineColorAndroid="rgba(0, 0, 0, 0)"
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "color": "#d7d7d7",
            "paddingRight": 15,
            "paddingTop": 10,
            "textAlign": "right",
          }
        }
      >
        Forgot Password?
      </Text>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flex": 0.25,
        },
        Object {
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "backgroundColor": "transparent",
          "color": "red",
          "lineHeight": 20,
          "textAlign": "center",
        }
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ff3366",
            "height": 60,
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#FFF",
              "fontSize": 18,
            }
          }
        >
          Sign In
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "center",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "color": "#D8D8D8",
          }
        }
      >
        Don't have an account?
      </Text>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0)",
              "color": "white",
              "marginLeft": 5,
            }
          }
        >
          Sign Up
        </Text>
      </View>
    </View>
  </View>
</Image>
`;

exports[`<SignIn /> renders with redux 1`] = `
<SignIn
  error=""
  loading={false}
  login={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "notify": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": null,
    }
  }
/>
`;
